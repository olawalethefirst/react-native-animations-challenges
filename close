warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory
[1mdiff --git a/package.json b/package.json[m
[1mindex 8ae7908..fc80499 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -1,31 +1,31 @@[m
 {[m
[31m-  "name": "practice",[m
[31m-  "version": "1.0.0",[m
[31m-  "main": "node_modules/expo/AppEntry.js",[m
[31m-  "scripts": {[m
[31m-    "start": "expo start",[m
[31m-    "android": "expo start --android",[m
[31m-    "ios": "expo start --ios",[m
[31m-    "web": "expo start --web",[m
[31m-    "eject": "expo eject"[m
[31m-  },[m
[31m-  "dependencies": {[m
[31m-    "@react-navigation/native": "^6.0.10",[m
[31m-    "@react-navigation/stack": "^6.2.1",[m
[31m-    "expo": "~45.0.0",[m
[31m-    "expo-status-bar": "~1.3.0",[m
[31m-    "react": "17.0.2",[m
[31m-    "react-dom": "17.0.2",[m
[31m-    "react-native": "0.68.2",[m
[31m-    "react-native-gesture-handler": "~2.2.1",[m
[31m-    "react-native-reanimated": "~2.8.0",[m
[31m-    "react-native-safe-area-context": "4.2.4",[m
[31m-    "react-native-screens": "~3.11.1",[m
[31m-    "react-native-vector-icons": "^9.1.0",[m
[31m-    "react-native-web": "0.17.7"[m
[31m-  },[m
[31m-  "devDependencies": {[m
[31m-    "@babel/core": "^7.12.9"[m
[31m-  },[m
[31m-  "private": true[m
[32m+[m[32m    "name": "react-native-animations-challenges",[m
[32m+[m[32m    "version": "1.0.0",[m
[32m+[m[32m    "main": "node_modules/expo/AppEntry.js",[m
[32m+[m[32m    "scripts": {[m
[32m+[m[32m        "start": "expo start",[m
[32m+[m[32m        "android": "expo start --android",[m
[32m+[m[32m        "ios": "expo start --ios",[m
[32m+[m[32m        "web": "expo start --web",[m
[32m+[m[32m        "eject": "expo eject"[m
[32m+[m[32m    },[m
[32m+[m[32m    "dependencies": {[m
[32m+[m[32m        "@react-navigation/native": "^6.0.10",[m
[32m+[m[32m        "@react-navigation/stack": "^6.2.1",[m
[32m+[m[32m        "expo": "~45.0.0",[m
[32m+[m[32m        "expo-status-bar": "~1.3.0",[m
[32m+[m[32m        "react": "17.0.2",[m
[32m+[m[32m        "react-dom": "17.0.2",[m
[32m+[m[32m        "react-native": "0.68.2",[m
[32m+[m[32m        "react-native-gesture-handler": "~2.2.1",[m
[32m+[m[32m        "react-native-reanimated": "~2.8.0",[m
[32m+[m[32m        "react-native-safe-area-context": "4.2.4",[m
[32m+[m[32m        "react-native-screens": "~3.11.1",[m
[32m+[m[32m        "react-native-vector-icons": "^9.1.0",[m
[32m+[m[32m        "react-native-web": "0.17.7"[m
[32m+[m[32m    },[m
[32m+[m[32m    "devDependencies": {[m
[32m+[m[32m        "@babel/core": "^7.12.9"[m
[32m+[m[32m    },[m
[32m+[m[32m    "private": true[m
 }[m
[1mdiff --git a/src/helperFunctions/distanceBetweenCoord.js b/src/helperFunctions/distanceBetweenCoord.js[m
[1mdeleted file mode 100644[m
[1mindex fe39b22..0000000[m
[1m--- a/src/helperFunctions/distanceBetweenCoord.js[m
[1m+++ /dev/null[m
[36m@@ -1,4 +0,0 @@[m
[31m-const distanceBetweenCoord = ([x1, y1], [x2, y2]) =>[m
[31m-    Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));[m
[31m-[m
[31m-export default distanceBetweenCoord;[m
[1mdiff --git a/src/navigators/screens.js b/src/navigators/screens.js[m
[1mindex 33b93c9..8c3508e 100644[m
[1m--- a/src/navigators/screens.js[m
[1m+++ b/src/navigators/screens.js[m
[36m@@ -1,11 +1,11 @@[m
 import ChanelListScreen from '../screens/ChanelList';[m
 import PenguinSwiperScreen from '../screens/PenguinSwiper';[m
[31m-import NativePanResponderScreen from '../screens/NativePanResponder';[m
[32m+[m[32mimport NativePanResponderScreen from '../screens/ImagePanResponder';[m
 [m
 const screens = [[m
     {[m
[31m-        name: 'NativePanResponder',[m
[31m-        description: 'Native PanResponder Implementation',[m
[32m+[m[32m        name: 'ImagePanResponder',[m
[32m+[m[32m        description: 'Image Pan Responder',[m
         component: NativePanResponderScreen,[m
     },[m
     {[m
[1mdiff --git a/src/screens/ChanelList.js b/src/screens/ChanelList.js[m
[1mindex ab4d6f9..63eb09a 100644[m
[1m--- a/src/screens/ChanelList.js[m
[1m+++ b/src/screens/ChanelList.js[m
[36m@@ -13,7 +13,7 @@[m [mimport ChanelItem, { imageBigHeight, height } from '../components/ChanelItem';[m
 import { useSafeAreaInsets } from 'react-native-safe-area-context';[m
 import ScreenContainer from '../components/ScreenContainer';[m
 [m
[31m-const ChanelList = ({ navigation: { goBack } }) => {[m
[32m+[m[32mexport default function ChanelList({ navigation: { goBack } }) {[m
     const { top } = useSafeAreaInsets();[m
     const scrollY = useSharedValue(0);[m
     const onScroll = useAnimatedScrollHandler((e) => {[m
[36m@@ -68,9 +68,7 @@[m [mconst ChanelList = ({ navigation: { goBack } }) => {[m
             />[m
         </ScreenContainer>[m
     );[m
[31m-};[m
[31m-[m
[31m-export default ChanelList;[m
[32m+[m[32m}[m
 [m
 const styles = StyleSheet.create({[m
     container: {[m
[1mdiff --git a/src/screens/Home.js b/src/screens/Home.js[m
[1mindex f2a625a..8d00267 100644[m
[1m--- a/src/screens/Home.js[m
[1m+++ b/src/screens/Home.js[m
[36m@@ -1,9 +1,9 @@[m
[31m-import { StyleSheet, ScrollView, View } from 'react-native';[m
[32m+[m[32mimport { StyleSheet, ScrollView, } from 'react-native';[m
 import HomeButton from '../components/HomeButton';[m
 import screens from '../navigators/screens';[m
 import { SafeAreaView } from 'react-native-safe-area-context';[m
 [m
[31m-const Home = ({ navigation: { navigate } }) => {[m
[32m+[m[32mexport default function Home({ navigation: { navigate } }) {[m
     return ([m
         <SafeAreaView style={styles.container}>[m
             <ScrollView contentContainerStyle={styles.contentContainer}>[m
[36m@@ -18,9 +18,7 @@[m [mconst Home = ({ navigation: { navigate } }) => {[m
             </ScrollView>[m
         </SafeAreaView>[m
     );[m
[31m-};[m
[31m-[m
[31m-export default Home;[m
[32m+[m[32m}[m
 [m
 const styles = StyleSheet.create({[m
     container: {[m
[1mdiff --git a/src/screens/NativePanResponder.js b/src/screens/NativePanResponder.js[m
[1mdeleted file mode 100644[m
[1mindex a35816c..0000000[m
[1m--- a/src/screens/NativePanResponder.js[m
[1m+++ /dev/null[m
[36m@@ -1,104 +0,0 @@[m
[31m-import { StyleSheet, PanResponder, Animated } from 'react-native';[m
[31m-import { useRef } from 'react';[m
[31m-import distanceBetweenCoord from '../helperFunctions/distanceBetweenCoord';[m
[31m-import ScreenContainer from '../components/ScreenContainer';[m
[31m-[m
[31m-export default function NativePanResponder({ navigation: { goBack } }) {[m
[31m-    const translate = useRef(new Animated.ValueXY()).current;[m
[31m-    const scale = useRef(new Animated.Value(1)).current;[m
[31m-    const initialDistanceBetweenCoord = useRef(0);[m
[31m-    const initialScale = useRef(1);[m
[31m-[m
[31m-    const pan = useRef([m
[31m-        PanResponder.create({[m
[31m-            onStartShouldSetPanResponder: () => true,[m
[31m-            onPanResponderGrant: () => {[m
[31m-                translate.setOffset({[m
[31m-                    // @ts-ignore[m
[31m-                    x: translate.x._value,[m
[31m-                    // @ts-ignore[m
[31m-                    y: translate.y._value,[m
[31m-                });[m
[31m-                translate.setValue({[m
[31m-                    x: 0,[m
[31m-                    y: 0,[m
[31m-                });[m
[31m-                // @ts-ignore[m
[31m-                initialScale.current = scale._value;[m
[31m-            },[m
[31m-[m
[31m-            onPanResponderMove: ({ nativeEvent }, gestureState) => {[m
[31m-                const activeTouches = nativeEvent.changedTouches;[m
[31m-                if ([m
[31m-                    activeTouches.length === 1 &&[m
[31m-                    !initialDistanceBetweenCoord.current[m
[31m-                ) {[m
[31m-                    translate.setValue({[m
[31m-                        x: gestureState.dx,[m
[31m-                        y: gestureState.dy,[m
[31m-                    });[m
[31m-                } else if (activeTouches.length === 2) {[m
[31m-                    const activeTouches = nativeEvent.changedTouches;[m
[31m-                    const touch1 = activeTouches[0];[m
[31m-                    const touch2 = activeTouches[1];[m
[31m-                    const pointsDistance = distanceBetweenCoord([m
[31m-                        [touch1.pageX, touch1.pageY],[m
[31m-                        [touch2.pageX, touch2.pageY][m
[31m-                    );[m
[31m-                    if (initialDistanceBetweenCoord.current) {[m
[31m-                        scale.setValue([m
[31m-                            initialScale.current *[m
[31m-                                Math.abs([m
[31m-                                    pointsDistance /[m
[31m-                                        initialDistanceBetweenCoord.current[m
[31m-                                )[m
[31m-                        );[m
[31m-                    } else {[m
[31m-                        initialDistanceBetweenCoord.current = pointsDistance;[m
[31m-                    }[m
[31m-                }[m
[31m-            },[m
[31m-            onPanResponderRelease: () => {[m
[31m-                translate.flattenOffset();[m
[31m-                initialDistanceBetweenCoord.current = 0;[m
[31m-                Animated.parallel([[m
[31m-                    Animated.spring(translate, {[m
[31m-                        toValue: { x: 0, y: 0 },[m
[31m-                        useNativeDriver: false,[m
[31m-                    }),[m
[31m-                    Animated.spring(scale, {[m
[31m-                        toValue: 1,[m
[31m-                        useNativeDriver: false,[m
[31m-                    }),[m
[31m-                ]).start();[m
[31m-            },[m
[31m-        })[m
[31m-    ).current;[m
[31m-[m
[31m-    return ([m
[31m-        <ScreenContainer style={styles.container} goBack={goBack}>[m
[31m-            <Animated.Image[m
[31m-                {...pan.panHandlers}[m
[31m-                style={[[m
[31m-                    styles.image,[m
[31m-                    {[m
[31m-                        transform: [[m
[31m-                            ...translate.getTranslateTransform(),[m
[31m-                            { scale },[m
[31m-                        ],[m
[31m-                    },[m
[31m-                ]}[m
[31m-                // @ts-ignore[m
[31m-                source={require('../../assets/images/passport.jpeg')}[m
[31m-            />[m
[31m-        </ScreenContainer>[m
[31m-    );[m
[31m-}[m
[31m-[m
[31m-const styles = StyleSheet.create({[m
[31m-    container: {[m
[31m-        alignItems: 'center',[m
[31m-        justifyContent: 'center',[m
[31m-    },[m
[31m-    image: { height: 200, width: 200 },[m
[31m-});[m
[1mdiff --git a/src/screens/PenguinSwiper.js b/src/screens/PenguinSwiper.js[m
[1mindex 9e1f596..5414243 100644[m
[1m--- a/src/screens/PenguinSwiper.js[m
[1m+++ b/src/screens/PenguinSwiper.js[m
[36m@@ -24,7 +24,7 @@[m [mconst scaleMonitor = 35;[m
 const primaryBlue = '#94C0F4';[m
 const secondaryBlue = '#2574DE';[m
 [m
[31m-const PenguinSwiper = ({ navigation: { goBack } }) => {[m
[32m+[m[32mexport default function PenguinSwiper({ navigation: { goBack } }) {[m
     const { width } = useWindowDimensions();[m
     const slideWidth = width - sliderSize - 2 * margin - scaleMonitor;[m
     const sliderWithSlideContainer = slideWidth + sliderSize;[m
[36m@@ -140,9 +140,7 @@[m [mconst PenguinSwiper = ({ navigation: { goBack } }) => {[m
             </View>[m
         </ScreenContainer>[m
     );[m
[31m-};[m
[31m-[m
[31m-export default PenguinSwiper;[m
[32m+[m[32m}[m
 [m
 const styles = StyleSheet.create({[m
     container: {[m
